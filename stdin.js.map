{
  "version": 3,
  "sources": ["../../../../../node_modules/@progp/core/index.ts", "../../../../index.ts"],
  "sourceRoot": "/Users/johan/github/progpjs/progpjs.dev/__scripts/node_modules/.progp/esbuildCache/cdb2e5c448d11906c9605977236200b4",
  "sourcesContent": ["/*\n * (C) Copyright 2024 Johan Michel PIQUET, France (https://johanpiquet.fr/).\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\ndeclare global {\n    /**\n     * Get a natif function group (function in C++ or Go).\n     * Return undefined if the security level is inferior to the security level of this group.\n     */\n    function progpGetModule<T>(modName: string): T | undefined; // Declared in C++, group \"progpCore\".\n\n    /**\n     * Print his argument to the console.\n     * Is like \"console.log\".\n     */\n    function progpPrint(...params: any): void;  // Declared in C++, group \"progpCore\".\n\n    /**\n     * Allows to avoid that a function is removed by the javascript optimizer.\n     */\n    function progpDontRemove(e: any): void; // Declared in this js script.\n\n    function progpCallAfterMs(timeInMs: number, callback: Function): void;\n}\n\n//region Web Standard libraries\n\n//region Timers\n\nlet g_nextTimerId = 1;\nlet g_timers: {[key: number]: boolean} = [];\n\n// @ts-ignore\nglobalThis.setTimeout = function (callbackFct: Function, timeInMs: number, ...params: any): number {\n    if (!callbackFct) return -1;\n    const timerId = g_nextTimerId++;\n    g_timers[timerId] = true;\n\n    progpCallAfterMs(timeInMs, () => {\n        let timerState = g_timers[timerId];\n\n        if (timerState) {\n            delete(g_timers[timerId]);\n            callbackFct.call(globalThis, params);\n        }\n    });\n\n    return timerId;\n};\n\nfunction setIntervalAux(callbackFct: Function, timeInMs: number, params: any[], timerId: number) {\n    progpCallAfterMs(timeInMs, () => {\n        let timerState = g_timers[timerId];\n\n        if (timerState) {\n            callbackFct.call(globalThis, params);\n            setIntervalAux(callbackFct, timeInMs, params, timerId);\n        }\n    });\n}\n\n// @ts-ignore\nglobalThis.setInterval = function (callbackFct: Function, timeInMs: number, ...params: any): number {\n    if (!callbackFct) return -1;\n    const timerId = g_nextTimerId++;\n    g_timers[timerId] = true;\n\n    setIntervalAux(callbackFct, timeInMs, params, timerId);\n    return timerId;\n}\n\n// @ts-ignore\nglobalThis.clearTimeout = function(timerId: number) {\n    delete(g_timers[timerId]);\n};\n\nglobalThis.clearInterval = globalThis.clearTimeout;\n\n//endregion\n\n//region Console\n\nconst bckConsoleLog = globalThis.console.log;\nconst bckConsoleWarn = globalThis.console.warn;\nconst bckConsoleError = globalThis.console.error;\nconst bckConsoleDebug = globalThis.console.debug;\nconst bckConsoleInfo = globalThis.console.info;\n\nglobalThis.console.log = function(...data: any[]) {\n    progpPrint(...data);\n    if (bckConsoleLog) bckConsoleLog(...data);\n}\n\nglobalThis.console.warn = function(...data: any[]) {\n    progpPrint(\"[WARN] \", ...data);\n    if (bckConsoleWarn) bckConsoleWarn(...data);\n}\n\nglobalThis.console.error = function(...data: any[]) {\n    progpPrint(\"[ERROR] \", ...data);\n    if (bckConsoleError) bckConsoleError(...data);\n}\n\nglobalThis.console.debug = function(...data: any[]) {\n    progpPrint(\"[DEBUG] \", ...data);\n    if (bckConsoleDebug) bckConsoleDebug(...data);\n}\n\nglobalThis.console.info = function(...data: any[]) {\n    progpPrint(\"[INFO] \", ...data);\n    if (bckConsoleInfo) bckConsoleInfo(...data);\n}\n\n//endregion\n\n//endregion\n\nexport interface SharedResource {}\n", "//import \"./testReact\"\n//import \"./testHttp\"\n//import \"./testNodeJS\"\n\ndebugger;\nprogpPrint(\"d1\");\ndebugger;\nprogpPrint(\"d2\");"],
  "mappings": ";AAyCA,IAAI,gBAAgB;AACpB,IAAI,WAAqC,CAAC;AAG1C,WAAW,aAAa,SAAU,aAAuB,aAAqB,QAAqB;AAC/F,MAAI,CAAC;AAAa,WAAO;AACzB,QAAM,UAAU;AAChB,WAAS,OAAO,IAAI;AAEpB,mBAAiB,UAAU,MAAM;AAC7B,QAAI,aAAa,SAAS,OAAO;AAEjC,QAAI,YAAY;AACZ,aAAO,SAAS,OAAO;AACvB,kBAAY,KAAK,YAAY,MAAM;AAAA,IACvC;AAAA,EACJ,CAAC;AAED,SAAO;AACX;AAEA,SAAS,eAAe,aAAuB,UAAkB,QAAe,SAAiB;AAC7F,mBAAiB,UAAU,MAAM;AAC7B,QAAI,aAAa,SAAS,OAAO;AAEjC,QAAI,YAAY;AACZ,kBAAY,KAAK,YAAY,MAAM;AACnC,qBAAe,aAAa,UAAU,QAAQ,OAAO;AAAA,IACzD;AAAA,EACJ,CAAC;AACL;AAGA,WAAW,cAAc,SAAU,aAAuB,aAAqB,QAAqB;AAChG,MAAI,CAAC;AAAa,WAAO;AACzB,QAAM,UAAU;AAChB,WAAS,OAAO,IAAI;AAEpB,iBAAe,aAAa,UAAU,QAAQ,OAAO;AACrD,SAAO;AACX;AAGA,WAAW,eAAe,SAAS,SAAiB;AAChD,SAAO,SAAS,OAAO;AAC3B;AAEA,WAAW,gBAAgB,WAAW;AAMtC,IAAM,gBAAgB,WAAW,QAAQ;AACzC,IAAM,iBAAiB,WAAW,QAAQ;AAC1C,IAAM,kBAAkB,WAAW,QAAQ;AAC3C,IAAM,kBAAkB,WAAW,QAAQ;AAC3C,IAAM,iBAAiB,WAAW,QAAQ;AAE1C,WAAW,QAAQ,MAAM,YAAY,MAAa;AAC9C,aAAW,GAAG,IAAI;AAClB,MAAI;AAAe,kBAAc,GAAG,IAAI;AAC5C;AAEA,WAAW,QAAQ,OAAO,YAAY,MAAa;AAC/C,aAAW,WAAW,GAAG,IAAI;AAC7B,MAAI;AAAgB,mBAAe,GAAG,IAAI;AAC9C;AAEA,WAAW,QAAQ,QAAQ,YAAY,MAAa;AAChD,aAAW,YAAY,GAAG,IAAI;AAC9B,MAAI;AAAiB,oBAAgB,GAAG,IAAI;AAChD;AAEA,WAAW,QAAQ,QAAQ,YAAY,MAAa;AAChD,aAAW,YAAY,GAAG,IAAI;AAC9B,MAAI;AAAiB,oBAAgB,GAAG,IAAI;AAChD;AAEA,WAAW,QAAQ,OAAO,YAAY,MAAa;AAC/C,aAAW,WAAW,GAAG,IAAI;AAC7B,MAAI;AAAgB,mBAAe,GAAG,IAAI;AAC9C;;;ACvHA;AACA,WAAW,IAAI;AACf;AACA,WAAW,IAAI;",
  "names": []
}
